// Code generated by go-swagger; DO NOT EDIT.

package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewLibpodGenerateKubeParams creates a new LibpodGenerateKubeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewLibpodGenerateKubeParams() *LibpodGenerateKubeParams {
	return &LibpodGenerateKubeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewLibpodGenerateKubeParamsWithTimeout creates a new LibpodGenerateKubeParams object
// with the ability to set a timeout on a request.
func NewLibpodGenerateKubeParamsWithTimeout(timeout time.Duration) *LibpodGenerateKubeParams {
	return &LibpodGenerateKubeParams{
		timeout: timeout,
	}
}

// NewLibpodGenerateKubeParamsWithContext creates a new LibpodGenerateKubeParams object
// with the ability to set a context for a request.
func NewLibpodGenerateKubeParamsWithContext(ctx context.Context) *LibpodGenerateKubeParams {
	return &LibpodGenerateKubeParams{
		Context: ctx,
	}
}

// NewLibpodGenerateKubeParamsWithHTTPClient creates a new LibpodGenerateKubeParams object
// with the ability to set a custom HTTPClient for a request.
func NewLibpodGenerateKubeParamsWithHTTPClient(client *http.Client) *LibpodGenerateKubeParams {
	return &LibpodGenerateKubeParams{
		HTTPClient: client,
	}
}

/* LibpodGenerateKubeParams contains all the parameters to send to the API endpoint
   for the libpod generate kube operation.

   Typically these are written to a http.Request.
*/
type LibpodGenerateKubeParams struct {

	/* Name.

	   Name or ID of the container or pod.
	*/
	Name string

	/* Service.

	   Generate YAML for a Kubernetes service object.
	*/
	Service *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the libpod generate kube params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LibpodGenerateKubeParams) WithDefaults() *LibpodGenerateKubeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the libpod generate kube params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LibpodGenerateKubeParams) SetDefaults() {
	var (
		serviceDefault = bool(false)
	)

	val := LibpodGenerateKubeParams{
		Service: &serviceDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the libpod generate kube params
func (o *LibpodGenerateKubeParams) WithTimeout(timeout time.Duration) *LibpodGenerateKubeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the libpod generate kube params
func (o *LibpodGenerateKubeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the libpod generate kube params
func (o *LibpodGenerateKubeParams) WithContext(ctx context.Context) *LibpodGenerateKubeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the libpod generate kube params
func (o *LibpodGenerateKubeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the libpod generate kube params
func (o *LibpodGenerateKubeParams) WithHTTPClient(client *http.Client) *LibpodGenerateKubeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the libpod generate kube params
func (o *LibpodGenerateKubeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the libpod generate kube params
func (o *LibpodGenerateKubeParams) WithName(name string) *LibpodGenerateKubeParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the libpod generate kube params
func (o *LibpodGenerateKubeParams) SetName(name string) {
	o.Name = name
}

// WithService adds the service to the libpod generate kube params
func (o *LibpodGenerateKubeParams) WithService(service *bool) *LibpodGenerateKubeParams {
	o.SetService(service)
	return o
}

// SetService adds the service to the libpod generate kube params
func (o *LibpodGenerateKubeParams) SetService(service *bool) {
	o.Service = service
}

// WriteToRequest writes these params to a swagger request
func (o *LibpodGenerateKubeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param name:.*
	if err := r.SetPathParam("name:.*", o.Name); err != nil {
		return err
	}

	if o.Service != nil {

		// query param service
		var qrService bool

		if o.Service != nil {
			qrService = *o.Service
		}
		qService := swag.FormatBool(qrService)
		if qService != "" {

			if err := r.SetQueryParam("service", qService); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
