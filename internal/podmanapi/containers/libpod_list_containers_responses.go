// Code generated by go-swagger; DO NOT EDIT.

package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LibpodListContainersReader is a Reader for the LibpodListContainers structure.
type LibpodListContainersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LibpodListContainersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLibpodListContainersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLibpodListContainersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLibpodListContainersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLibpodListContainersOK creates a LibpodListContainersOK with default headers values
func NewLibpodListContainersOK() *LibpodListContainersOK {
	return &LibpodListContainersOK{}
}

/*LibpodListContainersOK handles this case with default header values.

List Containers
*/
type LibpodListContainersOK struct {
	Payload []*LibpodListContainersOKBodyItems0
}

func (o *LibpodListContainersOK) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/json][%d] libpodListContainersOK  %+v", 200, o.Payload)
}

func (o *LibpodListContainersOK) GetPayload() []*LibpodListContainersOKBodyItems0 {
	return o.Payload
}

func (o *LibpodListContainersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodListContainersBadRequest creates a LibpodListContainersBadRequest with default headers values
func NewLibpodListContainersBadRequest() *LibpodListContainersBadRequest {
	return &LibpodListContainersBadRequest{}
}

/*LibpodListContainersBadRequest handles this case with default header values.

Bad parameter in request
*/
type LibpodListContainersBadRequest struct {
	Payload *LibpodListContainersBadRequestBody
}

func (o *LibpodListContainersBadRequest) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/json][%d] libpodListContainersBadRequest  %+v", 400, o.Payload)
}

func (o *LibpodListContainersBadRequest) GetPayload() *LibpodListContainersBadRequestBody {
	return o.Payload
}

func (o *LibpodListContainersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodListContainersBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodListContainersInternalServerError creates a LibpodListContainersInternalServerError with default headers values
func NewLibpodListContainersInternalServerError() *LibpodListContainersInternalServerError {
	return &LibpodListContainersInternalServerError{}
}

/*LibpodListContainersInternalServerError handles this case with default header values.

Internal server error
*/
type LibpodListContainersInternalServerError struct {
	Payload *LibpodListContainersInternalServerErrorBody
}

func (o *LibpodListContainersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/json][%d] libpodListContainersInternalServerError  %+v", 500, o.Payload)
}

func (o *LibpodListContainersInternalServerError) GetPayload() *LibpodListContainersInternalServerErrorBody {
	return o.Payload
}

func (o *LibpodListContainersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodListContainersInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LibpodListContainersBadRequestBody libpod list containers bad request body
swagger:model LibpodListContainersBadRequestBody
*/
type LibpodListContainersBadRequestBody struct {

	// API root cause formatted for automated parsing
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod list containers bad request body
func (o *LibpodListContainersBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodListContainersBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodListContainersBadRequestBody) UnmarshalBinary(b []byte) error {
	var res LibpodListContainersBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodListContainersInternalServerErrorBody libpod list containers internal server error body
swagger:model LibpodListContainersInternalServerErrorBody
*/
type LibpodListContainersInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod list containers internal server error body
func (o *LibpodListContainersInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodListContainersInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodListContainersInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LibpodListContainersInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodListContainersOKBodyItems0 Listcontainer describes a container suitable for listing
swagger:model LibpodListContainersOKBodyItems0
*/
type LibpodListContainersOKBodyItems0 struct {

	// Container command
	Command []string `json:"Command"`

	// Container creation time
	Created int64 `json:"Created,omitempty"`

	// Human readable container creation time.
	CreatedAt string `json:"CreatedAt,omitempty"`

	// If container has exited, the return code from the command
	ExitCode int32 `json:"ExitCode,omitempty"`

	// If container has exited/stopped
	Exited bool `json:"Exited,omitempty"`

	// Time container exited
	ExitedAt int64 `json:"ExitedAt,omitempty"`

	// The unique identifier for the container
	ID string `json:"Id,omitempty"`

	// Container image
	Image string `json:"Image,omitempty"`

	// Container image ID
	ImageID string `json:"ImageID,omitempty"`

	// If this container is a Pod infra container
	IsInfra bool `json:"IsInfra,omitempty"`

	// Labels for container
	Labels map[string]string `json:"Labels,omitempty"`

	// User volume mounts
	Mounts []string `json:"Mounts"`

	// The names assigned to the container
	Names []string `json:"Names"`

	// The process id of the container
	Pid int64 `json:"Pid,omitempty"`

	// If the container is part of Pod, the Pod ID. Requires the pod
	// boolean to be set
	Pod string `json:"Pod,omitempty"`

	// If the container is part of Pod, the Pod name. Requires the pod
	// boolean to be set
	PodName string `json:"PodName,omitempty"`

	// Port mappings
	Ports []*LibpodListContainersOKBodyItems0PortsItems0 `json:"Ports"`

	// Time when container started
	StartedAt int64 `json:"StartedAt,omitempty"`

	// State of container
	State string `json:"State,omitempty"`

	// Status is a human-readable approximation of a duration for json output
	Status string `json:"Status,omitempty"`

	// namespaces
	Namespaces *LibpodListContainersOKBodyItems0Namespaces `json:"Namespaces,omitempty"`

	// size
	Size *LibpodListContainersOKBodyItems0Size `json:"Size,omitempty"`
}

// Validate validates this libpod list containers o k body items0
func (o *LibpodListContainersOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePorts(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNamespaces(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *LibpodListContainersOKBodyItems0) validatePorts(formats strfmt.Registry) error {

	if swag.IsZero(o.Ports) { // not required
		return nil
	}

	for i := 0; i < len(o.Ports); i++ {
		if swag.IsZero(o.Ports[i]) { // not required
			continue
		}

		if o.Ports[i] != nil {
			if err := o.Ports[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Ports" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *LibpodListContainersOKBodyItems0) validateNamespaces(formats strfmt.Registry) error {

	if swag.IsZero(o.Namespaces) { // not required
		return nil
	}

	if o.Namespaces != nil {
		if err := o.Namespaces.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("Namespaces")
			}
			return err
		}
	}

	return nil
}

func (o *LibpodListContainersOKBodyItems0) validateSize(formats strfmt.Registry) error {

	if swag.IsZero(o.Size) { // not required
		return nil
	}

	if o.Size != nil {
		if err := o.Size.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("Size")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *LibpodListContainersOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodListContainersOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res LibpodListContainersOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodListContainersOKBodyItems0Namespaces ListContainer Namespaces contains the identifiers of the container's Linux namespaces
swagger:model LibpodListContainersOKBodyItems0Namespaces
*/
type LibpodListContainersOKBodyItems0Namespaces struct {

	// Cgroup namespace
	Cgroup string `json:"Cgroup,omitempty"`

	// IPC namespace
	IPC string `json:"Ipc,omitempty"`

	// Mount namespace
	MNT string `json:"Mnt,omitempty"`

	// Network namespace
	NET string `json:"Net,omitempty"`

	// PID namespace
	PIDNS string `json:"Pidns,omitempty"`

	// User namespace
	User string `json:"User,omitempty"`

	// UTS namespace
	UTS string `json:"Uts,omitempty"`
}

// Validate validates this libpod list containers o k body items0 namespaces
func (o *LibpodListContainersOKBodyItems0Namespaces) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodListContainersOKBodyItems0Namespaces) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodListContainersOKBodyItems0Namespaces) UnmarshalBinary(b []byte) error {
	var res LibpodListContainersOKBodyItems0Namespaces
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodListContainersOKBodyItems0PortsItems0 PortMapping is one or more ports that will be mapped into the container.
swagger:model LibpodListContainersOKBodyItems0PortsItems0
*/
type LibpodListContainersOKBodyItems0PortsItems0 struct {

	// ContainerPort is the port number that will be exposed from the
	// container.
	// Mandatory.
	ContainerPort uint16 `json:"container_port,omitempty"`

	// HostIP is the IP that we will bind to on the host.
	// If unset, assumed to be 0.0.0.0 (all interfaces).
	HostIP string `json:"host_ip,omitempty"`

	// HostPort is the port number that will be forwarded from the host into
	// the container.
	// If omitted, a random port on the host (guaranteed to be over 1024)
	// will be assigned.
	HostPort uint16 `json:"host_port,omitempty"`

	// Protocol is the protocol forward.
	// Must be either "tcp", "udp", and "sctp", or some combination of these
	// separated by commas.
	// If unset, assumed to be TCP.
	Protocol string `json:"protocol,omitempty"`

	// Range is the number of ports that will be forwarded, starting at
	// HostPort and ContainerPort and counting up.
	// This is 1-indexed, so 1 is assumed to be a single port (only the
	// Hostport:Containerport mapping will be added), 2 is two ports (both
	// Hostport:Containerport and Hostport+1:Containerport+1), etc.
	// If unset, assumed to be 1 (a single port).
	// Both hostport + range and containerport + range must be less than
	// 65536.
	Range uint16 `json:"range,omitempty"`
}

// Validate validates this libpod list containers o k body items0 ports items0
func (o *LibpodListContainersOKBodyItems0PortsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodListContainersOKBodyItems0PortsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodListContainersOKBodyItems0PortsItems0) UnmarshalBinary(b []byte) error {
	var res LibpodListContainersOKBodyItems0PortsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodListContainersOKBodyItems0Size ContainerSize holds the size of the container's root filesystem and top
// read-write layer.
swagger:model LibpodListContainersOKBodyItems0Size
*/
type LibpodListContainersOKBodyItems0Size struct {

	// root fs size
	RootFsSize int64 `json:"rootFsSize,omitempty"`

	// rw size
	RwSize int64 `json:"rwSize,omitempty"`
}

// Validate validates this libpod list containers o k body items0 size
func (o *LibpodListContainersOKBodyItems0Size) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodListContainersOKBodyItems0Size) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodListContainersOKBodyItems0Size) UnmarshalBinary(b []byte) error {
	var res LibpodListContainersOKBodyItems0Size
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
